\documentclass{article}
\usepackage{amsmath} %This allows me to use the align functionality.
                     %If you find yourself trying to replicate
                     %something you found online, ensure you're
                     %loading the necessary packages!
\usepackage{amsfonts}%Math font
\usepackage{graphicx}%For including graphics
\usepackage{hyperref}%For Hyperlinks
\usepackage[shortlabels]{enumitem}% For enumerated lists with labels specified
                                  % We had to run tlmgr_install("enumitem") in R
\hypersetup{colorlinks = true,citecolor=black} %set citations to have black (not green) color
\usepackage{natbib}        %For the bibliography
\setlength{\bibsep}{0pt plus 0.3ex}
\bibliographystyle{apalike}%For the bibliography
\usepackage[margin=0.50in]{geometry}
\usepackage{float}
\usepackage{multicol}

%fix for figures
\usepackage{caption}
\newenvironment{Figure}
  {\par\medskip\noindent\minipage{\linewidth}}
  {\endminipage\par\medskip}
\begin{document}

\vspace{-1in}
\title{Lab 8 -- MATH 240 -- Computational Statistics}

\author{
  Avery Johnson \\
  Colgate University  \\
  Department of Mathematics  \\
  {\tt aqjohnson@colgate.edu}
}

\date{}

\maketitle

\begin{multicols}{2}
\begin{abstract}
The Beta distribution is a flexible probability distribution defined on the interval (0,1), often used to model proportions and probabilities. This lab investigates the properties of the Beta distribution, including its mean, variance, skewness, and kurtosis, using both theoretical derivations and numerical simulations. Through the generation of Beta-distributed samples, the convergence of sample statistics to population values is examined, highlighting the importance of sample size in statistical examination. Additionally, two estimation methods, the Method of Moments (MOM) and Maximum Likelihood Estimation (MLE), are compared using simulated real-world data. The effectiveness of these methods is evaluated through repeated sampling, with results demonstrating that the MLE provides more accurate and precise estimates than MOM. The application of the Beta distribution to country death rate data further illustrates its relevance in real-world modeling. 

\end{abstract}

\noindent \textbf{Keywords:} 
Beta distribution, moments, mean, variance, skewness, kurtosis, MOM estimator, MLE estimator.

\section{Introduction}
The Beta distribution is a continuous probability distribution defined on $[0,1]$. It is commonly used to model proportions, probabilities, and rates, making it useful in a variety of statistical and real-world applications. The shape of the Beta distribution is controlled by two parameters, $\alpha$ and $\beta$, which determine its skewness and characteristics. This lab explores the properties of the Beta distribution, compares theoretical and sample-based estimates, and applies parameter estimation techniques to real-world data. The primary objectives are to analyze the Beta distribution's properties, to compare sample statistics with true population values, to estimate the parameters $\alpha$ and $\beta$ from real-world data using the Method of Moments (MLE) and Maximum Likelihood Estimation (MLE), and to assess the effectiveness of different estimation techniques using simulation.

\section{Density Functions and Parameters}
The probability density function (PDF) of a beta distribution is given by:

$$
f_X(x \mid \alpha, \beta) = \frac{\Gamma(\alpha + \beta)}{\Gamma \alpha \Gamma \beta} x^{\alpha-1} (1-x)^{\beta - 1} I(x \in [0,1])
$$
where $I(x \in [0,1]) = 1$ when $x \in [0, 1]$ and $0$ otherwise.

To visualize the impact of the parameters $\alpha$ and $\beta$ on the distribution, four cases were examined: Beta(2,5), Beta(5,5), Beta(5,2), and Beta(0.5,0.5). The first distribution is right-skewed, the second is symmetric, the third is left-skewed, and the forth is U-shaped. These distributions were plotted to illustrate how the parameters influence the shape of the density function. The plots in Figure \ref{populationfigures} demonstrate that increasing $\alpha$ shifts the distribution towards 1, while increasing $\beta$ shifts it towards zero. When $\alpha = \beta$, the distribution is symmetric. 


\section{Properties}
The Beta distribution's key properties include its mean, variance, skewness, and kurtosis. Each of the properties relies on $\alpha$ and $\beta$, showing how the distribution's shape and behavior changes depending on the parameters. These moments were computed using numerical integration and verified against the theoretical values in Table \ref{populationsummary}. 
To evaluate whether data summaries of random samples connect to the actual population distribution, random samples of size 500 were drawn from each Beta distribution. The sample mean, variance, skewness, and kurtosis were computed as can be seen in Table \ref{samplestatistics}. These were then compared to population-level quantities in Table \ref{populationsummary}, and we conclude that the values closely resembled one another. Furthermore, the histograms and estimated density in Figure \ref{samplehistograms} demonstrate that the samples, in each case, closely resemble the theoretical Beta probability density functions. From this analysis, we confirmed that both our graphical and numerical summaries of random samples connect to the actual population distribution.

<<echo=FALSE, eval=TRUE, results="asis", message=FALSE, warning=FALSE, size='scriptsize'>>=
################################################################################
# Lab 7 Code
# Avery Johnson
################################################################################

library(tidyverse)

################################################################################
# Task 1: Describe the Population Distribution
################################################################################


population.distribution <- function(alpha, beta) {
  beta.dist <- data.frame(
    alpha = alpha,
    beta = beta,
    mean = alpha / (alpha + beta),
    var = (alpha * beta) / ((alpha + beta)^2 * (alpha + beta + 1)),
    skew = (2 * (beta - alpha) * sqrt(alpha + beta + 1)) / 
      ((alpha + beta + 2) * sqrt(alpha * beta)),
    kurtosis = (6*((alpha-beta)^2*(alpha+beta+1)-alpha*beta*(alpha+beta+2))) /
      (alpha*beta*(alpha+beta+2)*(alpha+beta+3))
  )
  return(beta.dist)
}

population.table <- bind_rows(
  population.distribution(2,5),
  population.distribution(5,5),
  population.distribution(5,2),
  population.distribution(0.50, 0.50)
)

# create Latex table
library(xtable)
latex_table <- xtable(population.table, 
                      caption="Population-Level Summary",
                      label="populationsummary")

################################################################################
# Task 3: Do Data Summaries Help?
################################################################################

# for beta(2,5) dist
library(e1071)

set.seed(7272) # Set seed so we all get the same results.
sample.size <- 500 # Specify sample details
alpha <- 2
beta <- 5
beta.sample1 <- rbeta(n = sample.size,  # sample size
                     shape1 = alpha,   # alpha parameter
                     shape2 = beta)    # beta parameter

beta.sample1 <- tibble(beta.sample1)

sample.stats1 <- beta.sample1 |>
  summarize(
    alpha=alpha,
    beta=beta,
    mean = mean(beta.sample1),
    var = var(beta.sample1),
    skew = e1071::skewness(beta.sample1),
    kurtosis = e1071::kurtosis(beta.sample1)
  )

# for beta(5,5) dist

set.seed(7272) # Set seed so we all get the same results.
sample.size <- 500 # Specify sample details
alpha <- 5
beta <- 5
beta.sample2 <- rbeta(n = sample.size,  # sample size
                      shape1 = alpha,   # alpha parameter
                      shape2 = beta)    # beta parameter

beta.sample2 <- tibble(beta.sample2)

sample.stats2 <- beta.sample2 |>
  summarize(
    alpha=alpha,
    beta=beta,
    mean = mean(beta.sample2),
    var = var(beta.sample2),
    skew = e1071::skewness(beta.sample2),
    kurtosis = e1071::kurtosis(beta.sample2)
  )

# for beta (5,2) distribution

set.seed(7272) # Set seed so we all get the same results.
sample.size <- 500 # Specify sample details
alpha <- 5
beta <- 2
beta.sample3 <- rbeta(n = sample.size,  # sample size
                      shape1 = alpha,   # alpha parameter
                      shape2 = beta)    # beta parameter

beta.sample3 <- tibble(beta.sample3)

sample.stats3 <- beta.sample3 |>
  summarize(
    alpha=alpha,
    beta=beta,
    mean = mean(beta.sample3),
    var = var(beta.sample3),
    skew = e1071::skewness(beta.sample3),
    kurtosis = e1071::kurtosis(beta.sample3)
  )

# for beta(0.5, 0.5 dist)

set.seed(7272) # Set seed so we all get the same results.
sample.size <- 500 # Specify sample details
alpha <- 0.5
beta <- 0.5
beta.sample4 <- rbeta(n = sample.size,  # sample size
                      shape1 = alpha,   # alpha parameter
                      shape2 = beta)    # beta parameter

beta.sample4 <- tibble(beta.sample4)

sample.stats4 <- beta.sample4 |>
  summarize(
    alpha=alpha,
    beta=beta,
    mean = mean(beta.sample4),
    var = var(beta.sample4),
    skew = e1071::skewness(beta.sample4),
    kurtosis = e1071::kurtosis(beta.sample4)
  )

sample.stats <- bind_rows(
  sample.stats1,
  sample.stats2,
  sample.stats3,
  sample.stats4
)

# create Latex table
library(xtable)
sample.stats.xtable <- xtable(sample.stats, 
                      caption="Sample Summary",
                      label="samplestatistics")


@

<<echo=FALSE, eval=TRUE, results="asis">>=
# placement="H" places table [H]ere, just like plot
# include.rownames=FALSE doesn’t print the row numbers in this example
print(latex_table,
table.placement = "H", include.rownames=FALSE, size = "small")
@

<<echo=FALSE, eval=TRUE, results="asis">>=
# placement="H" places table [H]ere, just like plot
# include.rownames=FALSE doesn’t print the row numbers in this example
print(sample.stats.xtable,
table.placement = "H", include.rownames=FALSE, size = "small")
@

\section{Estimators}


\section{Death Rates Example}


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Bibliography
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\vspace{2em}

\noindent\textbf{Bibliography:} 

\begin{tiny}
\bibliography{bib}
\end{tiny}


\end{multicols}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Appendix
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\newpage
\onecolumn
\section{Appendix}

\subsection{Density Function and Parameters}
\subsubsection{Population Distribution Figures}
<<plot1, echo=FALSE, eval=TRUE, message=FALSE, warning=FALSE, size='scriptsize'>>=
# plot these four distributions 
fig.1.data <- tibble(x = seq(-0.25, 1.25, length.out=1000))|>   # generate a grid of points
  mutate(beta.pdf = dbeta(x, 2, 5))                          # compute the beta PDF

plot1 <- ggplot(data= fig.1.data)+                                           # specify data
  geom_line(aes(x=x, y=beta.pdf, color="Beta(2,5)")) +          # plot beta dist
  geom_hline(yintercept=0)+                                            # plot x axis
  theme_bw()+                                                          # change theme
  xlab("x")+                                                           # label x axis
  ylab("Density")+                                                     # label y axis
  scale_color_manual("", values = c("black", "grey"))+                 # change colors
  theme(legend.position = "bottom")                                    # move legend to bottom


fig.2.data <- tibble(x = seq(-0.25, 1.25, length.out=1000))|>   
  mutate(beta.pdf = dbeta(x, 5, 5))                          
         
plot2 <- ggplot(data= fig.2.data)+                                          
  geom_line(aes(x=x, y=beta.pdf, color="Beta(5,5)")) +          
  geom_hline(yintercept=0)+                                            
  theme_bw()+                                                          
  xlab("x")+                                                          
  ylab("Density")+                                                     
  scale_color_manual("", values = c("black", "grey"))+                
  theme(legend.position = "bottom")

fig.3.data <- tibble(x = seq(-0.25, 1.25, length.out=1000))|>   
  mutate(beta.pdf = dbeta(x, 5, 2))                          

plot3 <- ggplot(data= fig.3.data)+                                          
  geom_line(aes(x=x, y=beta.pdf, color="Beta(5,2)")) +          
  geom_hline(yintercept=0)+                                            
  theme_bw()+                                                          
  xlab("x")+                                                          
  ylab("Density")+                                                     
  scale_color_manual("", values = c("black", "grey"))+                
  theme(legend.position = "bottom") 

fig.4.data <- tibble(x = seq(-0.25, 1.25, length.out=1000))|>   
  mutate(beta.pdf = dbeta(x, 0.5, 0.5))                          

plot4 <- ggplot(data= fig.4.data)+                                          
  geom_line(aes(x=x, y=beta.pdf, color="Beta(0.5,0.5)")) +          
  geom_hline(yintercept=0)+                                            
  theme_bw()+                                                          
  xlab("x")+                                                          
  ylab("Density")+                                                     
  scale_color_manual("", values = c("black", "grey"))+                
  theme(legend.position = "bottom") 

library(patchwork)
population.figures <- plot1 + plot2 + plot3 + plot4
population.figures
@

\begin{figure}[H]
\begin{center}
<<echo=FALSE, warning=FALSE, message=FALSE, fig.dim=c(2.5,1.75)>>=
@
\caption{Population Figures for Various Beta Distributions}
\label{populationfigures} %we can now reference plot1
\end{center}
\end{figure}

\subsection{Properties}
\subsubsection{Sample Distribution Figures}
<<plot2, echo=FALSE, eval=TRUE, message=FALSE, warning=FALSE, size='scriptsize'>>=
################################################################################
# Task 3: Do Data Summaries Help?
################################################################################

# for beta(2,5) dist
library(e1071)

set.seed(7272) # Set seed so we all get the same results.
sample.size <- 500 # Specify sample details
alpha <- 2
beta <- 5
beta.sample1 <- rbeta(n = sample.size,  # sample size
                     shape1 = alpha,   # alpha parameter
                     shape2 = beta)    # beta parameter

beta.sample1 <- tibble(beta.sample1)

sample.stats1 <- beta.sample1 |>
  summarize(
    alpha=alpha,
    beta=beta,
    mean = mean(beta.sample1),
    variance = var(beta.sample1),
    skewness = e1071::skewness(beta.sample1),
    excess_kurt = e1071::kurtosis(beta.sample1)
  )

hist1 <- ggplot() +
  geom_histogram(data=beta.sample1,
                 aes(x=beta.sample1, y=after_stat(density)),
                 breaks=seq(0,1,0.1),
                 fill="grey30",
                 color="lightgrey")+
  stat_density(data=beta.sample1,
               aes(x=beta.sample1, color="Density"), geom="line") +
  geom_line(data=fig.1.data,
            aes(x=x, y=beta.pdf, color="Population Beta Dist")) +
  geom_hline(yintercept = 0) +
  theme_bw()+
  xlab("x")+
  ylab("Density") +
  labs(color="Line") +
  ggtitle("Beta (2,5) Distribution")

# for beta(5,5) dist

set.seed(7272) # Set seed so we all get the same results.
sample.size <- 500 # Specify sample details
alpha <- 5
beta <- 5
beta.sample2 <- rbeta(n = sample.size,  # sample size
                      shape1 = alpha,   # alpha parameter
                      shape2 = beta)    # beta parameter

beta.sample2 <- tibble(beta.sample2)

sample.stats2 <- beta.sample2 |>
  summarize(
    alpha=alpha,
    beta=beta,
    mean = mean(beta.sample2),
    variance = var(beta.sample2),
    skewness = e1071::skewness(beta.sample2),
    excess_kurt = e1071::kurtosis(beta.sample2)
  )

hist2 <- ggplot() +
  geom_histogram(data=beta.sample2,
                 aes(x=beta.sample2, y=after_stat(density)),
                 breaks=seq(0,1,0.1),
                 fill="grey30",
                 color="lightgrey")+
  stat_density(data=beta.sample2,
               aes(x=beta.sample2, color="Density"), geom="line") +
  geom_line(data=fig.2.data,
            aes(x=x, y=beta.pdf, color="Population Beta Dist")) +
  geom_hline(yintercept = 0) +
  theme_bw()+
  xlab("x")+
  ylab("Density") +
  labs(color="Line") +
  ggtitle("Beta (5,5) Distribution")

# for beta (5,2) distribution

set.seed(7272) # Set seed so we all get the same results.
sample.size <- 500 # Specify sample details
alpha <- 5
beta <- 2
beta.sample3 <- rbeta(n = sample.size,  # sample size
                      shape1 = alpha,   # alpha parameter
                      shape2 = beta)    # beta parameter

beta.sample3 <- tibble(beta.sample3)

sample.stats3 <- beta.sample3 |>
  summarize(
    alpha=alpha,
    beta=beta,
    mean = mean(beta.sample3),
    variance = var(beta.sample3),
    skewness = e1071::skewness(beta.sample3),
    excess_kurt = e1071::kurtosis(beta.sample3)
  )

hist3 <- ggplot() +
  geom_histogram(data=beta.sample3,
                 aes(x=beta.sample3, y=after_stat(density)),
                 breaks=seq(0,1,0.1),
                 fill="grey30",
                 color="lightgrey")+
  stat_density(data=beta.sample3,
               aes(x=beta.sample3, color="Density"), geom="line") +
  geom_line(data=fig.3.data,
            aes(x=x, y=beta.pdf, color="Population Beta Dist")) +
  geom_hline(yintercept = 0) +
  theme_bw()+
  xlab("x")+
  ylab("Density") +
  labs(color="Line") +
  ggtitle("Beta (5,2) Distribution")

# for beta(0.5, 0.5 dist)

set.seed(7272) # Set seed so we all get the same results.
sample.size <- 500 # Specify sample details
alpha <- 0.5
beta <- 0.5
beta.sample4 <- rbeta(n = sample.size,  # sample size
                      shape1 = alpha,   # alpha parameter
                      shape2 = beta)    # beta parameter

beta.sample4 <- tibble(beta.sample4)

sample.stats4 <- beta.sample4 |>
  summarize(
    alpha=alpha,
    beta=beta,
    mean = mean(beta.sample4),
    variance = var(beta.sample4),
    skewness = e1071::skewness(beta.sample4),
    excess_kurt = e1071::kurtosis(beta.sample4)
  )

hist4 <- ggplot() +
  geom_histogram(data=beta.sample4,
                 aes(x=beta.sample4, y=after_stat(density)),
                 breaks=seq(0,1,0.1),
                 fill="grey30",
                 color="lightgrey")+
  stat_density(data=beta.sample4,
               aes(x=beta.sample4, color="Density"), geom="line") +
  geom_line(data=fig.4.data,
            aes(x=x, y=beta.pdf, color="Population Beta Dist")) +
  geom_hline(yintercept = 0) +
  theme_bw()+
  xlab("x")+
  ylab("Density") +
  labs(color="Line") +
  ggtitle("Beta (0.5,0.5) Distribution")

sample.histograms <- hist1 + hist2 + hist3 + hist4 + plot_layout(guides = 'collect')

sample.histograms
@

\begin{figure}[H]
\begin{center}
<<echo=FALSE, warning=FALSE, message=FALSE, fig.dim=c(2.5,1.75)>>=
@
\caption{Sample Figures for Various Beta Distributions}
\label{samplehistograms} %we can now reference plot1
\end{center}
\end{figure}

\subsection{Estimators}

\subsection{Example}

\end{document}